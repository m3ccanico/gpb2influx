//  
// Copyrights (c)  2016, Juniper Networks, Inc.
// All rights reserved.
//

//
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless optional by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//

//
// Balagopal Ambalakkat,Sumanth Kamatala, 2016
//
// This defines the gpb message format used exporting 
// cmerror configuration information.
//  
// The top level message is Cmerror
// The message is a collection of error items.
// 
//
// Version 1.0
//

syntax = "proto2";
import "telemetry_top.proto";


// 
// Juniper Error Item information
// 
message Error {

    // Identifier that uniquely identifies the source of
    // the error.
    // e.g.
    //
    // junos/system/linecard/0/pcie/0/lane/0/pcie_cmerror_uncorrectable_major
    //
    optional string identifier = 1 [(telemetry_options).is_key = true];

    // Description for the error
    optional string description = 2;
    
    // Help information regarding the error.
    // how to resolve it etc.
    optional string help  = 3;

    // Scope in which this error belong to.
    optional string scope = 4;

    // Category in which this error belong to.
    optional string category = 5;

    // Default bit encoded action for this error
    // if it crosses the threshold.
    optional uint32  action = 6;

    // Severity of this error item
    // supported "major"/"minor"/"fatal"
    optional string severity = 7;

    // Default Thresholds setup for this error
    optional uint32 threshold = 8;
    optional uint32 limit = 9;
    optional uint32 raising_threshold = 10;
    optional uint32 clearing_threshold = 11;

    // Additional Metadata for error processing
    optional uint32 module_id        = 12;
    optional uint32 component_id     = 13;
    optional uint32 error_code       = 14;
    optional string error_source_type =15;

}

// 
// Top-level Cmerror message 
// 
message Cmerror {

    // collection of error items
    repeated Error error_item = 1;
}


//
// This occupies branch 20 from JuniperNetworksSensors
//
extend JuniperNetworksSensors {
    optional Cmerror jnpr_cmerror_ext = 20;
}

